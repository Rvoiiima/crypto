from Crypto.Util.number import *
def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, x, y = egcd(b % a, a)
        return (g, y - (b // a) * x, x)

def modInv(a, m):
 g, x, y = egcd(a, m)
 if (g != 1):
     raise Exception("[-]No modular multiplicative inverse of %d under modulus %d" % (a, m))
 else:
     return x % m
     
 
mod = "820360637236294ECA7338E8134F1FDC1ED3BFBC580556CFC3E162CA6C4D3F78388D838F2C02D3CD244B535C6C55573E137E9BFC2ED2543F597AC2704A0A5E9C38026D4E7ECC380B838A6A0C81364A918A9023914874900E4947AE78F8F0E4E7C1B19812356600FEBF8F4511124FDD2346E52561638360F71D3D1CA72A00B9126D8262E8E28E6E097FEE8D84CF998D959DA0586196D2B50E8BF64D1211DA7979889A9054BA6BE65ADE326333CBDAB0830BD10DA162EDBB440BC8F100BB0ABA5A41C8BA57D94B197FA46E24CB1E4B24CA9E2EA6FC64BC8FD0C3C303D7878B2A74473E9A6D295FD4C168206DB7F3DD46F489D43D4CFFC0EEEABF72036C42CD80D1"

n = int(mod, 16)

mod = 16412644668387448202602868564657817982712937117403326478040413244236254209496422904841684484070976457127375281938290368819113895947104117920301391301302458296995119090401217271530671857359331013018245353633823829023919982282853725331228993010723032259432768476189536325244779555100499288430162843372341424896331171429031460987478425485927429353451288825183178490523945285963321241638761938399327909890149306684087809043387541718932166246829150568334276381266981951527138353767039901526430946041905249119183001989621345785066731600788939651395359292331721765532484866325744418810054000818931641021711343993047877517521

factor = "21312192379 * 41694776327 * 57712671469 * 69102768037 * 79753565033 * 86131058131 * 91838820179 * 129887877181 * 144561148073 * 156135349637 * 172718834527 * 183076580677 * 299708689207 * 315959390353 * 359234858707 * 359289993437 * 457408060411 * 472896378329 * 476875578869 * 495070766849 * 522484567589 * 539156063617 * 547718265481 * 558061439779 * 563426178853 * 578072728433 * 616107638803 * 623193007529 * 624533069099 * 672942390979 * 677437074187 * 686116305163 * 747518751157 * 748151626433 * 750776132569 * 752501396681 * 779700020551 * 784911464809 * 815527664663 * 823394947451 * 836607296719 * 838784442581 * 854962951303 * 871923615209 * 891152617007 * 933107199179 * 944189993029 * 957027949433 * 992735373053 * 1027411280821 * 1036372987901 * 1057330714703 * 1057438303553"

primes = factor.split(" * ")
print primes
e = 65537
phin = 1

for i in primes:
    phin *= int(i) - 1

d = modInv(e, phin)

with open('encrypted', 'r') as f:
    crypt = f.read()
    crypt = bytes_to_long(crypt)
ans = pow(crypt, d, n)

print long_to_bytes(ans)
